{"version":3,"sources":["types/ActiveFilter.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["ActiveFilter","TodoItem","todo","isActiveTodo","setActiveTodo","className","cn","id","completed","title","type","onClick","TodoList","todos","activeTodo","map","options","All","Active","Completed","TodoFilter","activeFilter","setActiveFilter","query","setQuery","value","onChange","event","target","option","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","filteredTodos","allTodos","filter","toLowerCase","includes","trim","getFilteredTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d798ca81.chunk.js","sourcesContent":["export enum ActiveFilter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React, { FC } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n  isActiveTodo: boolean;\n  setActiveTodo: React.Dispatch<React.SetStateAction<Todo | null>>\n}\n\nexport const TodoItem: FC<Props> = ({ todo, isActiveTodo, setActiveTodo }) => {\n  const selectTodo = () => {\n    setActiveTodo(isActiveTodo ? null : todo);\n  };\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({ 'has-background-info-light': isActiveTodo })}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={cn('has-text-success', {\n            'has-text-danger': !todo.completed,\n          })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={selectTodo}\n        >\n          <span className=\"icon\">\n            <i\n              className={cn('far', {\n                'fa-eye-slash': isActiveTodo,\n                'fa-eye': !isActiveTodo,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ninterface Props {\n  todos: Todo[];\n  activeTodo: Todo | null;\n  setActiveTodo: React.Dispatch<React.SetStateAction<Todo | null>>\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  activeTodo,\n  setActiveTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          todo={todo}\n          isActiveTodo={todo.id === activeTodo?.id}\n          setActiveTodo={setActiveTodo}\n          key={todo.id}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import {\n  Dispatch, SetStateAction, ChangeEvent, FC,\n} from 'react';\nimport { ActiveFilter } from '../../types/ActiveFilter';\n\nconst options = [ActiveFilter.All, ActiveFilter.Active, ActiveFilter.Completed];\n\ninterface Props {\n  activeFilter: ActiveFilter;\n  setActiveFilter: Dispatch<SetStateAction<ActiveFilter>>;\n  query: string;\n  setQuery: Dispatch<SetStateAction<string>>;\n}\n\nexport const TodoFilter: FC<Props> = ({\n  activeFilter, setActiveFilter, query, setQuery,\n}) => {\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setActiveFilter(event.target.value as ActiveFilter);\n  };\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const deleteQuery = () => setQuery('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={activeFilter}\n            onChange={handleSelect}\n          >\n            {options.map(option => (\n              <option key={option} value={option}>{option}</option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"delete\"\n              onClick={deleteQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  activeTodo: Todo;\n  setActiveTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n}\n\nexport const TodoModal: React.FC<Props> = ({ activeTodo, setActiveTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(activeTodo.userId).then(setUser);\n  }, [activeTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${activeTodo.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"delete\"\n              onClick={() => setActiveTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {activeTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                activeTodo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { ActiveFilter } from './types/ActiveFilter';\n\nimport './App.scss';\n\nconst getFilteredTodos = (allTodos: Todo[], filter: ActiveFilter, query: string): Todo[] => {\n  let filteredTodos = allTodos;\n\n  if (query) {\n    filteredTodos = filteredTodos.filter(todo => todo.title.toLowerCase().includes(query.trim().toLowerCase()));\n  }\n\n  switch (filter) {\n    case ActiveFilter.Active:\n      return filteredTodos.filter(todo => !todo.completed);\n    case ActiveFilter.Completed:\n      return filteredTodos.filter(todo => todo.completed);\n\n    default:\n      return filteredTodos;\n  }\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [activeTodo, setActiveTodo] = useState<Todo | null>(null);\n  const [activeFilter, setActiveFilter] = useState<ActiveFilter>(ActiveFilter.All);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const filteredTodos = getFilteredTodos(todos, activeFilter, query);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                activeFilter={activeFilter}\n                setActiveFilter={setActiveFilter}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length ? (\n                <TodoList\n                  todos={filteredTodos}\n                  activeTodo={activeTodo}\n                  setActiveTodo={setActiveTodo}\n                />\n              ) : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {activeTodo && <TodoModal activeTodo={activeTodo} setActiveTodo={setActiveTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}